{"version":3,"sources":["../../api/routes.js"],"names":["router","secret","get","req","res","next","authenticate","err","user","info","console","log","headers","authorization","status","json","String","route","post","send"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,sBAAf;AACA,IAAMC,SAAS,sBAAf;AACA;;AAEAD,OAAOE,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,qBAASC,YAAT,CAAsB,KAAtB,EAA6B,UAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAChDC,YAAQC,GAAR,CAAYR,IAAIS,OAAJ,CAAYC,aAAxB;AACA,QAAIN,GAAJ,EAAS;AACP,aAAOF,KAAKE,GAAL,CAAP;AACD;AACD,QAAI,CAACC,IAAL,EAAW;AACT,aAAOJ,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAAOT,GAAP,CAArB,CAAP;AACD;AACD,QAAIC,IAAJ,EAAU;AACR,aAAOJ,IACJU,MADI,CACG,GADH,EAEJC,IAFI,CAEC,EAAEd,QAAQ,KAAV,EAFD,CAAP;AAGD;AACF,GAbD,EAaGE,GAbH,EAaQC,GAbR,EAaaC,IAbb;AAcD,CAfD;;AAiBAL,OAAOiB,KAAP,CAAa,QAAb,EAAuBC,IAAvB,CAA4B,UAACf,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAAA,SAAoB,kBAAMF,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,CAApB;AAAA,CAA5B;;AAEAL,OAAOiB,KAAP,CAAa,WAAb,EAA0BC,IAA1B,CAA+B,UAACf,GAAD,EAAMC,GAAN;AAAA,SAAc,qBAASD,GAAT,EAAcC,GAAd,CAAd;AAAA,CAA/B;;AAEA;;AAEAJ,OAAOiB,KAAP,CAAa,GAAb,EAAkBf,GAAlB,CAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SACpBA,IAAIe,IAAJ,CAAS,gBAAT,CADoB;AAAA,CAAtB;;kBAIenB,M","file":"routes.js","sourcesContent":["import express, { Router } from 'express';\nimport { userIndex, register, login } from './controllers/users';\nimport passport from 'passport';\nimport jwt from 'jsonwebtoken';\nimport User from './models/user';\n\nconst router = Router();\nconst secret = '7x0jhxt&quot;9(thpX6';\n// delete unless needed\n\nrouter.get('/protected', (req, res, next) => {\n  passport.authenticate('jwt', (err, user, info) => {\n    console.log(req.headers.authorization);\n    if (err) {\n      return next(err);\n    }\n    if (!user) {\n      return res.status(401).json(String(err));\n    }\n    if (user) {\n      return res\n        .status(200)\n        .json({ secret: '123' });\n    }\n  })(req, res, next);\n});\n\nrouter.route('/login').post((req, res, next) => login(req, res, next));\n\nrouter.route('/register').post((req, res) => register(req, res));\n\n// router.route('/users.json').get(userIndex);\n\nrouter.route('/').get((req, res) =>\n  res.send('Hello Errbody!')\n);\n\nexport default router;\n"]}